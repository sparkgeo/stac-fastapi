name: stac-fastapi
on:
  push:
    branches: [ master, feature/3 ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db_service:
        image: bitner/pgstac:0.2.7
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgis
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          ALLOW_IP_RANGE: 0.0.0.0/0
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Lint code
        uses: pre-commit/action@v2.0.0

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install types
        run: |
          pip install ./stac_fastapi/types[dev]

      - name: Install core api
        run: |
          pip install ./stac_fastapi/api[dev]

      - name: Install Extensions
        run: |
          pip install ./stac_fastapi/extensions[dev]

      - name: Install sqlalchemy stac-fastapi
        run: |
          pip install ./stac_fastapi/sqlalchemy[dev,server]

      - name: Install pgstac stac-fastapi
        run: |
          pip install ./stac_fastapi/pgstac[dev,server]

      - name: Run migration
        run: |
          cd stac_fastapi/sqlalchemy && alembic upgrade head
        env:
          POSTGRES_USER: username
          POSTGRES_PASS: password
          POSTGRES_DBNAME: postgis
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432

      - name: Run test suite
        run: |
          cd stac_fastapi/sqlalchemy && pipenv run pytest -svvv
        env:
          ENVIRONMENT: testing
          POSTGRES_USER: username
          POSTGRES_PASS: password
          POSTGRES_DBNAME: postgis
          POSTGRES_HOST_READER: localhost
          POSTGRES_HOST_WRITER: localhost
          POSTGRES_PORT: 5432

      - name: Run test suite
        run: |
          cd stac_fastapi/pgstac && pipenv run pytest -svvv
        env:
          ENVIRONMENT: testing
          POSTGRES_USER: username
          POSTGRES_PASS: password
          POSTGRES_DBNAME: postgis
          POSTGRES_HOST_READER: localhost
          POSTGRES_HOST_WRITER: localhost
          POSTGRES_PORT: 5432

  test-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test generating docs
        run: make docs

  deploy-image:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}